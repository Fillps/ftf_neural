[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 5
# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 15

# Commands to set the session inside GDB environment
gdbInitStrings = file /tmp/neural-tmr/neural-tmr; set args /tmp/neural-tmr/input.txt /tmp/neural-tmr-detection.log /tmp/neural-tmr/output

goldFile = /tmp/neural-tmr/gold
outputFile = /tmp/neural-tmr/output

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 neural-tmr

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 neural-tmr

# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 9

# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
[neural-single]
faultModel = 0

[neural-double]
faultModel = 1

[neural-lsb]
faultModel = 4

[neural-random]
faultModel = 2

[neural-zeros]
faultModel = 3
